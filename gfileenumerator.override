/* -*- Mode: C; c-basic-offset: 4 -*-
 * pygobject - Python bindings for GObject
 * Copyright (C) 2008  Johan Dahlin
 *
 *   gfileenumerator.override: module overrides for GFileEnumerator
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
 * USA
 */
%%
override-slot GFileEnumerator.tp_iter
static PyObject*
_wrap_g_file_enumerator_tp_iter(PyGObject *self)
{
    Py_INCREF (self);
    return (PyObject *) self;
}
%%
override-slot GFileEnumerator.tp_iternext
static PyObject*
_wrap_g_file_enumerator_tp_iternext(PyGObject *iter)
{
    GFileInfo *file_info;
    GError *error = NULL;

    if (!iter->obj) {
	PyErr_SetNone(PyExc_StopIteration);
	return NULL;
    }

    file_info = g_file_enumerator_next_file(G_FILE_ENUMERATOR(iter->obj),
					    NULL,
					    &error);
    if (pyg_error_check(&error)) {
        return NULL;
    }
    
    if (!file_info) {
	PyErr_SetNone(PyExc_StopIteration);
	return NULL;
    }

    return pygobject_new((GObject*)file_info);
}
